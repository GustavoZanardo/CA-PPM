SELECT   @SELECT:DIM:USER_DEF:IMPLIED:CUSTO:MES:MES@
        ,@SELECT:DIM_PROP:USER_DEF:IMPLIED:CUSTO:ID:ID@
        ,@SELECT:DIM_PROP:USER_DEF:IMPLIED:CUSTO:CODE:CODE@
        ,@SELECT:DIM_PROP:USER_DEF:IMPLIED:CUSTO:NAME:NAME@
        ,@SELECT:DIM_PROP:USER_DEF:IMPLIED:CUSTO:TO_CHAR(MES, 'yyyy-mm'):PERIOD_NAME@
        ,@SELECT:METRIC:USER_DEF:IMPLIED:CUSTO_LINHA_BASE_ACUMULADO:CUSTO_LINHA_BASE_ACUMULADO@
        ,@SELECT:METRIC:USER_DEF:IMPLIED:CUSTO_FORECAST_ACUMULADO:CUSTO_FORECAST_ACUMULADO@
        ,@SELECT:METRIC:USER_DEF:IMPLIED:CUSTO_REAL_ACUMULADO:CUSTO_REAL_ACUMULADO@

FROM (

SELECT
  ID ID
, CODE CODE
, NAME NAME
, MES MES
, SUM(CUSTO_FORECAST_MENSAL) OVER (ORDER BY MES ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) CUSTO_FORECAST_ACUMULADO
, CASE 
  WHEN (CUSTO_REALIZADO_MENSAL = 0 AND  MES > SYSDATE) THEN NULL 
  ELSE SUM(CUSTO_REALIZADO_MENSAL) OVER (ORDER BY MES ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) 
  END CUSTO_REAL_ACUMULADO
, SUM(CUSTO_LINHA_BASE_MENSAL) OVER (ORDER BY MES ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) CUSTO_LINHA_BASE_ACUMULADO
FROM (
SELECT
  ID ID
, CODE CODE
, NAME NAME



, MES MES
, SUM(CUSTO_FORECAST) CUSTO_FORECAST_MENSAL
, SUM(CUSTO_REALIZADO) CUSTO_REALIZADO_MENSAL
, SUM(CUSTO_LINHA_BASE) CUSTO_LINHA_BASE_MENSAL
FROM (

-- CUSTO LINHA DE BASE MENSAL





SELECT 
  ID
, CODE
, NAME
, MES MES
, NVL(SUM(PLANNED_COST),0) CUSTO_FORECAST
, NVL(SUM(ACTUAL_COST),0) CUSTO_REALIZADO
, NVL(SUM(BASELINE_COST),0) CUSTO_LINHA_BASE
FROM (
-- CUSTO LINHA DE BASE MENSAL

SELECT INV.ID ID, INV.CODE CODE, INV.NAME NAME, TRUNC(FP_COST.START_DATE,'MONTH') MES, SUM(ROUND((fp_cost.finish_date - fp_cost.start_date)*fp_cost.slice,2)) BASELINE_COST, 0 PLANNED_COST, 0 ACTUAL_COST
FROM 
INV_INVESTMENTS INV
LEFT JOIN FIN_PLANS FP ON INV.ID = FP.OBJECT_ID AND FP.PLAN_TYPE_CODE = 'BUDGET'
LEFT JOIN FIN_COST_PLAN_DETAILS FPD on FP.ID = FPD.PLAN_ID
LEFT JOIN ODF_SSL_CST_DTL_COST FP_COST ON FPD.ID = FP_COST.PRJ_OBJECT_ID
WHERE FP.IS_PLAN_OF_RECORD=1
AND INV.ODF_OBJECT_CODE = 'project'
AND INV.ID = @WHERE:PARAM:XML:INTEGER:/data/id/@value@
AND FP_COST.START_DATE IS NOT NULL
GROUP BY INV.ID, INV.CODE, INV.NAME, FP_COST.START_DATE











) AMTS
GROUP BY ID, CODE, NAME, MES


UNION ALL


-- CUSTO FORECAST MENSAL








SELECT 
  ID
, CODE
, NAME
, MES MES
, NVL(SUM(PLANNED_COST),0) CUSTO_FORECAST
, NVL(SUM(ACTUAL_COST),0) CUSTO_REALIZADO
, NVL(SUM(BASELINE_COST),0) CUSTO_LINHA_BASE
FROM (
-- CUSTO FORECAST MENSAL

SELECT INV.ID ID, INV.CODE CODE, INV.NAME NAME, TRUNC(FP_COST.START_DATE,'MONTH') MES, 0 BASELINE_COST, SUM(ROUND((fp_cost.finish_date - fp_cost.start_date)*fp_cost.slice,2)) PLANNED_COST, 0 ACTUAL_COST
FROM 
INV_INVESTMENTS INV
LEFT JOIN FIN_PLANS FP ON INV.ID = FP.OBJECT_ID AND FP.PLAN_TYPE_CODE = 'FORECAST'
LEFT JOIN FIN_COST_PLAN_DETAILS FPD on FP.ID = FPD.PLAN_ID
LEFT JOIN ODF_SSL_CST_DTL_COST FP_COST ON FPD.ID = FP_COST.PRJ_OBJECT_ID
WHERE FP.IS_PLAN_OF_RECORD=1
AND INV.ODF_OBJECT_CODE = 'project'
AND INV.ID = @WHERE:PARAM:XML:INTEGER:/data/id/@value@
AND FP_COST.START_DATE IS NOT NULL
GROUP BY INV.ID, INV.CODE, INV.NAME, FP_COST.START_DATE
) AMTS
GROUP BY ID, CODE, NAME, MES


UNION ALL

-- CUSTO REALIZADO MENSAL

SELECT 
  ID
, CODE
, NAME
, MES MES
, NVL(SUM(PLANNED_COST),0) CUSTO_FORECAST
, NVL(SUM(ACTUAL_COST),0) CUSTO_REALIZADO
, NVL(SUM(BASELINE_COST),0) CUSTO_LINHA_BASE
FROM (
-- CUSTO REALIZADO MENSAL

SELECT INV.ID ID, INV.CODE CODE, INV.NAME NAME, TRUNC(PW.MONTH_BEGIN,'MONTH') MES, 0 BASELINE_COST, 0 PLANNED_COST, SUM(PV.TOTALCOST) ACTUAL_COST
FROM INV_INVESTMENTS INV
LEFT JOIN PPA_WIP PW ON INV.ID = PW.INVESTMENT_ID
LEFT JOIN PPA_WIP_VALUES PV ON PW.TRANSNO = PV.TRANSNO 
WHERE PV.CURRENCY_TYPE = 'HOME'
AND PW.STATUS = 0
AND INV.ODF_OBJECT_CODE = 'project'
AND INV.ID = @WHERE:PARAM:XML:INTEGER:/data/id/@value@
-- FILTRO DE MES MENOR QUE MES ATUAL PARA O CUSTO REALIZADO ACUMULADO
AND PW.TRANSDATE <= SYSDATE
GROUP BY INV.ID, INV.CODE, INV.NAME, PW.MONTH_BEGIN
) AMTS
GROUP BY ID, CODE, NAME, MES

UNION
-- EXIBICAO DE TODAS AS DATAS
SELECT 
    ID
  , CODE
  , NAME
  , MES MES
  ,  CUSTO_FORECAST
  ,  CUSTO_REALIZADO
  ,  CUSTO_LINHA_BASE
  FROM 
(

SELECT   ID
,CODE
,NAME
,(ADD_MONTHS ( start_dt , LEVEL - 1)) MES
,0 CUSTO_FORECAST
,0 CUSTO_REALIZADO
,0 CUSTO_LINHA_BASE
FROM     (SELECT ID
          ,CODE
          ,NAME
          ,  TRUNC ( START_DATE, 'MONTH') AS start_dt
,TRUNC ( FINISH_DATE, 'MONTH') AS end_dt FROM 
(
-- DATAS DE BUDGET
select  
INV.ID ID,
INV.CODE CODE,
INV.NAME NAME,
P.START_DATE START_DATE,
P2.END_DATE-1 FINISH_DATE

FROM INV_INVESTMENTS INV
INNER JOIN FIN_PLANS FP ON INV.ID = FP.OBJECT_ID AND FP.PLAN_TYPE_CODE = 'BUDGET' AND FP.IS_PLAN_OF_RECORD=1
LEFT JOIN BIZ_COM_PERIODS P ON P.ID = FP.START_PERIOD_ID
LEFT JOIN BIZ_COM_PERIODS P2 ON P2.ID = FP.END_PERIOD_ID
WHERE INV.ID = @WHERE:PARAM:XML:INTEGER:/data/id/@value@


UNION
-- DATAS DE FORECAST
select  
INV.ID ID,
INV.CODE CODE,
INV.NAME NAME,
P.START_DATE START_DATE,
P2.END_DATE-1 FINISH_DATE

FROM INV_INVESTMENTS INV
INNER JOIN FIN_PLANS FP ON INV.ID = FP.OBJECT_ID AND FP.PLAN_TYPE_CODE = 'FORECAST' AND FP.IS_PLAN_OF_RECORD=1
LEFT JOIN BIZ_COM_PERIODS P ON P.ID = FP.START_PERIOD_ID
LEFT JOIN BIZ_COM_PERIODS P2 ON P2.ID = FP.END_PERIOD_ID
WHERE INV.ID = @WHERE:PARAM:XML:INTEGER:/data/id/@value@
)
)
CONNECT BY     LEVEL <= 1 + MONTHS_BETWEEN ( end_dt, start_dt)
) 


)


GROUP BY ID, CODE, NAME, MES
)


)
WHERE @FILTER@